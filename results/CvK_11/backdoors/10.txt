Best fitness 0.00585938 (rho=0.994141, hard=6) on iteration 811 with 10 variables: [42, 1260, 2371, 2472, 2528, 2778, 3237, 3522, 3702, 4087]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 767 with 10 variables: [806, 1602, 2300, 2434, 2961, 2962, 3487, 3488, 3497, 3995]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 600 with 10 variables: [198, 203, 277, 1306, 3055, 3056, 3307, 3352, 3399, 3683]
Best fitness 0.00976562 (rho=0.990234, hard=10) on iteration 613 with 10 variables: [169, 184, 251, 258, 2375, 2419, 2485, 3585, 3861, 3863]
Best fitness 0.0195312 (rho=0.980469, hard=20) on iteration 725 with 10 variables: [1291, 1562, 1569, 1597, 1602, 2001, 2078, 3535, 3883, 4512]
Best fitness 0.00878906 (rho=0.991211, hard=9) on iteration 937 with 10 variables: [2400, 3055, 3488, 3489, 3522, 3523, 3716, 3788, 4193, 4567]
Best fitness 0.00585938 (rho=0.994141, hard=6) on iteration 544 with 10 variables: [429, 1805, 1872, 2553, 2668, 3344, 3535, 3584, 3586, 3634]
Best fitness 0.0205078 (rho=0.979492, hard=21) on iteration 693 with 10 variables: [696, 844, 1211, 1567, 1770, 2318, 2703, 2955, 3877, 4562]
Best fitness 0.00585938 (rho=0.994141, hard=6) on iteration 804 with 10 variables: [20, 1236, 2778, 3185, 3486, 3583, 3585, 3608, 3634, 3885]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 997 with 10 variables: [1570, 2372, 2689, 3068, 3084, 3169, 3344, 3523, 3525, 3580]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 937 with 10 variables: [730, 748, 752, 1927, 2666, 3488, 3524, 3634, 3683, 3885]
Best fitness 0.0078125 (rho=0.992188, hard=8) on iteration 922 with 10 variables: [843, 1570, 1789, 2082, 2375, 2660, 3169, 3995, 4519, 4555]
Best fitness 0.00488281 (rho=0.995117, hard=5) on iteration 798 with 10 variables: [1172, 1461, 1982, 3068, 3352, 3399, 3486, 3522, 3585, 3683]
Best fitness 0.00878906 (rho=0.991211, hard=9) on iteration 987 with 10 variables: [1927, 2278, 2384, 2417, 2684, 3481, 3487, 3587, 3634, 3702]
Best fitness 0.00488281 (rho=0.995117, hard=5) on iteration 843 with 10 variables: [1857, 2553, 3169, 3480, 3524, 3615, 3617, 3891, 3912, 3918]
Best fitness 0.00195312 (rho=0.998047, hard=2) on iteration 921 with 10 variables: [1857, 2298, 2384, 3517, 3522, 3580, 3585, 3590, 3634, 3663]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 990 with 10 variables: [1676, 2485, 3056, 3068, 3522, 3580, 3591, 3717, 3861, 4152]
Best fitness 0.0078125 (rho=0.992188, hard=8) on iteration 769 with 10 variables: [938, 1529, 1542, 1581, 1857, 2318, 2400, 3488, 3582, 3698]
Best fitness 0.00585938 (rho=0.994141, hard=6) on iteration 594 with 10 variables: [2371, 2372, 2668, 2878, 2886, 3586, 3588, 3632, 3861, 4046]
Best fitness 0.00585938 (rho=0.994141, hard=6) on iteration 591 with 10 variables: [2485, 3101, 3150, 3178, 3440, 3511, 3523, 3588, 3592, 4027]
Best fitness 0.0185547 (rho=0.981445, hard=19) on iteration 841 with 10 variables: [11, 204, 341, 344, 640, 2660, 2792, 3000, 3497, 4570]
Best fitness 0.0234375 (rho=0.976562, hard=24) on iteration 939 with 10 variables: [16, 1770, 1792, 1816, 1862, 1873, 2371, 3590, 3592, 4512]
Best fitness 0.00292969 (rho=0.99707, hard=3) on iteration 834 with 10 variables: [704, 2485, 3150, 3486, 3580, 3601, 3625, 3840, 3872, 4537]
Best fitness 0.00488281 (rho=0.995117, hard=5) on iteration 937 with 10 variables: [42, 1857, 3585, 3601, 3615, 3840, 4087, 4711, 4747, 4765]
Best fitness 0.00488281 (rho=0.995117, hard=5) on iteration 813 with 10 variables: [110, 2092, 3237, 3589, 3591, 3702, 3770, 3877, 3885, 4934]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 868 with 10 variables: [1548, 2485, 3321, 3488, 3582, 3608, 3615, 3617, 3995, 4562]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 961 with 10 variables: [1853, 1881, 2300, 2372, 3007, 3056, 3059, 3559, 3608, 4294]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 870 with 10 variables: [2553, 2660, 3399, 3444, 3585, 3632, 3634, 3690, 3702, 4835]
Best fitness 0.00585938 (rho=0.994141, hard=6) on iteration 466 with 10 variables: [988, 1573, 1602, 2078, 2371, 2384, 2623, 3307, 3535, 4541]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 855 with 10 variables: [369, 1522, 1542, 2372, 2993, 3059, 3311, 3502, 3625, 3995]
Best fitness 0.00683594 (rho=0.993164, hard=7) on iteration 863 with 10 variables: [37, 42, 204, 1688, 2009, 2553, 2778, 2940, 3068, 3522]
Best fitness 0.00488281 (rho=0.995117, hard=5) on iteration 830 with 10 variables: [921, 2466, 2702, 2953, 3237, 3487, 3517, 3585, 3590, 3866]
Best fitness 0.00488281 (rho=0.995117, hard=5) on iteration 957 with 10 variables: [18, 919, 1676, 1857, 2704, 3101, 3497, 3615, 3632, 3877]
Best fitness 0.0078125 (rho=0.992188, hard=8) on iteration 921 with 10 variables: [2236, 2400, 2466, 2660, 3055, 3576, 3578, 3585, 3608, 3993]
Best fitness 0.00292969 (rho=0.99707, hard=3) on iteration 863 with 10 variables: [1561, 2007, 2466, 3237, 3524, 3559, 3582, 3584, 3592, 3995]
Best fitness 0.00292969 (rho=0.99707, hard=3) on iteration 869 with 10 variables: [420, 856, 1602, 1770, 2375, 2553, 2623, 3084, 3497, 4146]
Best fitness 0.00976562 (rho=0.990234, hard=10) on iteration 954 with 10 variables: [1927, 2318, 2400, 3102, 3479, 3632, 3698, 3770, 3995, 4910]
Best fitness 0.0175781 (rho=0.982422, hard=18) on iteration 892 with 10 variables: [775, 1927, 2384, 2666, 3436, 3499, 3509, 3510, 3698, 3877]
Best fitness 0.00488281 (rho=0.995117, hard=5) on iteration 973 with 10 variables: [2317, 2321, 2417, 3101, 3583, 3698, 3840, 3995, 4564, 4711]
Best fitness 0.0078125 (rho=0.992188, hard=8) on iteration 656 with 10 variables: [1809, 2400, 2466, 2599, 3094, 3237, 3517, 3559, 3615, 3625]
Best fitness 0.00585938 (rho=0.994141, hard=6) on iteration 813 with 10 variables: [1548, 2295, 2371, 2388, 2514, 2870, 3169, 3522, 3617, 3883]
Best fitness 0.00195312 (rho=0.998047, hard=2) on iteration 847 with 10 variables: [779, 1688, 2623, 3150, 3487, 3523, 3524, 3584, 3617, 4152]
Best fitness 0.00878906 (rho=0.991211, hard=9) on iteration 850 with 10 variables: [1602, 1857, 2666, 2703, 2842, 2853, 3056, 3084, 3487, 4752]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 930 with 10 variables: [1548, 1690, 1770, 1824, 1858, 2371, 2668, 3877, 4087, 4436]
Best fitness 0.00683594 (rho=0.993164, hard=7) on iteration 897 with 10 variables: [664, 668, 1273, 2009, 2082, 3150, 3350, 3632, 3683, 3883]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 846 with 10 variables: [144, 1992, 2372, 2384, 2417, 3056, 3350, 3559, 3584, 3689]
Best fitness 0.0078125 (rho=0.992188, hard=8) on iteration 892 with 10 variables: [323, 768, 1548, 1688, 2375, 2385, 2413, 2417, 3608, 3632]
Best fitness 0.0175781 (rho=0.982422, hard=18) on iteration 823 with 10 variables: [988, 2400, 3011, 3017, 3237, 3352, 3582, 4629, 4634, 4683]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 949 with 10 variables: [18, 1688, 3522, 3559, 3592, 3601, 3632, 4135, 4723, 4841]
Best fitness 0.00976562 (rho=0.990234, hard=10) on iteration 923 with 10 variables: [1548, 2086, 2252, 2623, 3237, 3497, 3517, 3586, 4591, 4950]
Best fitness 0.00878906 (rho=0.991211, hard=9) on iteration 956 with 10 variables: [51, 92, 1857, 2984, 3082, 3119, 3157, 3344, 3583, 3591]
Best fitness 0.00292969 (rho=0.99707, hard=3) on iteration 849 with 10 variables: [1688, 2355, 2666, 2697, 2704, 2870, 3350, 3399, 3625, 3634]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 676 with 10 variables: [64, 1548, 1770, 2434, 2437, 2622, 3486, 3585, 3634, 3995]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 955 with 10 variables: [676, 682, 2375, 3582, 3583, 3590, 3608, 3634, 4744, 4847]
Best fitness 0.00292969 (rho=0.99707, hard=3) on iteration 794 with 10 variables: [1548, 1676, 1691, 1709, 2300, 2660, 2668, 3350, 3487, 3589]
Best fitness 0.015625 (rho=0.984375, hard=16) on iteration 770 with 10 variables: [887, 1770, 1927, 2485, 2793, 3497, 3683, 3770, 3947, 4704]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 995 with 10 variables: [2666, 3101, 3559, 3590, 3615, 3688, 3863, 3872, 3891, 5035]
Best fitness 0.00976562 (rho=0.990234, hard=10) on iteration 949 with 10 variables: [204, 2310, 3121, 3144, 3487, 3522, 3592, 3995, 4719, 4721]
Best fitness 0.0146484 (rho=0.985352, hard=15) on iteration 912 with 10 variables: [1113, 1548, 1927, 2306, 2318, 2388, 2472, 2863, 3683, 5039]
Best fitness 0.00585938 (rho=0.994141, hard=6) on iteration 807 with 10 variables: [1857, 2372, 2553, 2863, 2957, 3150, 3307, 3352, 3535, 4711]
Best fitness 0.0166016 (rho=0.983398, hard=17) on iteration 981 with 10 variables: [49, 307, 2321, 2702, 2704, 2769, 3580, 3654, 3688, 4841]
Best fitness 0.00585938 (rho=0.994141, hard=6) on iteration 839 with 10 variables: [1885, 2371, 2553, 2778, 2870, 3084, 3372, 3393, 3702, 3995]
Best fitness 0.00878906 (rho=0.991211, hard=9) on iteration 950 with 10 variables: [1789, 2334, 2368, 2387, 2660, 3055, 3517, 3883, 4087, 4562]
Best fitness 0.00878906 (rho=0.991211, hard=9) on iteration 993 with 10 variables: [123, 168, 698, 1927, 2660, 3352, 3399, 3617, 4567, 4569]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 971 with 10 variables: [2400, 2778, 3055, 3344, 3487, 3580, 3711, 3717, 3836, 3840]
Best fitness 0.00976562 (rho=0.990234, hard=10) on iteration 986 with 10 variables: [59, 163, 217, 1231, 2400, 2553, 2668, 3487, 3588, 3872]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 527 with 10 variables: [2, 1789, 2553, 2582, 2660, 2870, 3344, 3497, 3586, 3885]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 634 with 10 variables: [1770, 2892, 3101, 3274, 3344, 3350, 3399, 3559, 3591, 3995]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 366 with 10 variables: [1789, 2375, 2660, 3352, 3486, 3502, 3885, 3999, 4013, 4059]
Best fitness 0.00585938 (rho=0.994141, hard=6) on iteration 976 with 10 variables: [999, 1688, 2466, 2490, 2564, 2870, 3580, 3592, 3653, 3883]
Best fitness 0.00878906 (rho=0.991211, hard=9) on iteration 832 with 10 variables: [1602, 1646, 1857, 1874, 3535, 3634, 3770, 3995, 4616, 4694]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 669 with 10 variables: [708, 1461, 1703, 1857, 2001, 2008, 2371, 2417, 3608, 3877]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 960 with 10 variables: [1770, 2300, 2371, 2870, 3150, 3350, 3429, 3488, 3512, 3890]
Best fitness 0.0078125 (rho=0.992188, hard=8) on iteration 844 with 10 variables: [1107, 1770, 1857, 2435, 2778, 2870, 3237, 3487, 3683, 4567]
Best fitness 0.00585938 (rho=0.994141, hard=6) on iteration 875 with 10 variables: [18, 977, 1676, 2372, 3488, 3535, 3584, 3601, 3866, 4307]
Best fitness 0.0078125 (rho=0.992188, hard=8) on iteration 848 with 10 variables: [778, 1650, 2375, 2789, 2870, 3517, 3523, 3524, 3588, 3590]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 844 with 10 variables: [1688, 2375, 2668, 3486, 3583, 3586, 3591, 4635, 4637, 4642]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 859 with 10 variables: [1789, 2300, 2676, 2699, 3517, 3523, 3625, 3993, 4079, 4080]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 960 with 10 variables: [449, 1526, 1542, 1548, 1789, 2375, 3055, 3588, 3683, 3883]
Best fitness 0.0078125 (rho=0.992188, hard=8) on iteration 868 with 10 variables: [2008, 2318, 3443, 3455, 3573, 3584, 3608, 3617, 3632, 3883]
Best fitness 0.0195312 (rho=0.980469, hard=20) on iteration 793 with 10 variables: [79, 322, 323, 2318, 2359, 2384, 2666, 2997, 3497, 4994]
Best fitness 0.00683594 (rho=0.993164, hard=7) on iteration 862 with 10 variables: [1789, 1857, 3237, 3523, 3583, 3588, 4725, 4796, 4801, 4899]
Best fitness 0.00976562 (rho=0.990234, hard=10) on iteration 705 with 10 variables: [27, 332, 2466, 2553, 3084, 3486, 3582, 3702, 4852, 4923]
Best fitness 0.00292969 (rho=0.99707, hard=3) on iteration 575 with 10 variables: [1857, 2870, 3025, 3184, 3344, 3352, 3589, 3625, 3770, 3872]
Best fitness 0.0146484 (rho=0.985352, hard=15) on iteration 795 with 10 variables: [1588, 1688, 2076, 2092, 2107, 2120, 2154, 2666, 3344, 4694]
Best fitness 0.00878906 (rho=0.991211, hard=9) on iteration 603 with 10 variables: [697, 2076, 2400, 2553, 3350, 3487, 3588, 4179, 4268, 4515]
Best fitness 0.00488281 (rho=0.995117, hard=5) on iteration 870 with 10 variables: [398, 457, 1770, 1857, 2347, 3559, 3615, 3770, 3872, 3885]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 828 with 10 variables: [1857, 2444, 2485, 2687, 3084, 3443, 3486, 3572, 3601, 3683]
Best fitness 0.0078125 (rho=0.992188, hard=8) on iteration 851 with 10 variables: [1927, 3366, 3617, 3754, 3770, 3840, 3885, 3995, 4296, 4388]
Best fitness 0.0117188 (rho=0.988281, hard=12) on iteration 539 with 10 variables: [39, 180, 1094, 1127, 1134, 1548, 2318, 3084, 3524, 3702]
Best fitness 0.00292969 (rho=0.99707, hard=3) on iteration 927 with 10 variables: [550, 1602, 2082, 2372, 3101, 3150, 3237, 3399, 3580, 3617]
Best fitness 0.00488281 (rho=0.995117, hard=5) on iteration 939 with 10 variables: [116, 1433, 1442, 1676, 1688, 1789, 3497, 3608, 3615, 3840]
Best fitness 0.00488281 (rho=0.995117, hard=5) on iteration 943 with 10 variables: [849, 1593, 1770, 2318, 2371, 2400, 3084, 3497, 3526, 4541]
Best fitness 0.00292969 (rho=0.99707, hard=3) on iteration 748 with 10 variables: [1494, 1676, 2400, 2485, 2870, 2991, 3084, 3584, 3608, 3885]
Best fitness 0.00878906 (rho=0.991211, hard=9) on iteration 945 with 10 variables: [894, 1618, 1643, 1676, 1926, 2400, 2466, 2485, 2553, 3702]
Best fitness 0.0136719 (rho=0.986328, hard=14) on iteration 676 with 10 variables: [1294, 1688, 2466, 2553, 3056, 3683, 4160, 4170, 4210, 4232]
Best fitness 0.015625 (rho=0.984375, hard=16) on iteration 688 with 10 variables: [287, 939, 2376, 2466, 2697, 2783, 3583, 3589, 3632, 3877]
Best fitness 0.0078125 (rho=0.992188, hard=8) on iteration 880 with 10 variables: [2318, 3101, 3307, 3475, 3482, 3494, 3516, 3617, 3702, 3857]
Best fitness 0.00390625 (rho=0.996094, hard=4) on iteration 804 with 10 variables: [1323, 1857, 2318, 2666, 2668, 3169, 3344, 3350, 3372, 3885]
Best fitness 0.00195312 (rho=0.998047, hard=2) on iteration 863 with 10 variables: [291, 3237, 3344, 3535, 3590, 3625, 3634, 3840, 3874, 3995]
